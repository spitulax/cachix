#!/usr/bin/env bash

command -v nom >/dev/null
NOM=$?

paths () {
    nix path-info --json result/ | jq -r '.[].references.[]'
}

build () {
    echo -e '\033[1mBuilding packages...'
    if [ $NOM -eq 0 ]; then
        nix build .#all --log-format internal-json -v --accept-flake-config |& nom --json
    else
        nix build .#all --accept-flake-config
    fi
}

push () {
    echo -e '\033[1mPushing packages...'
    cachix push spitulax `paths`
}

upinput () {
    echo -e '\033[1mUpdating flake inputs...'
    nix flake update --accept-flake-config
}

uplist () {
    echo "<!--- This list was auto-generated by ./helper.sh. DO NOT edit this file manually. -->" > pkgs.md
    echo >> pkgs.md
    echo '<h2 align="center">List of Packages</h2>' >> pkgs.md
    echo >> pkgs.md
    echo '_(The latest version available in the nix store)_' >> pkgs.md
    echo >> pkgs.md
    LIST=()
    for path in $(paths); do
        LIST+=($(echo -e "- $path" | sed -r 's/^- \/\w+\/\w+\/\w+-//'))
    done
    IFS=$'\n' LIST=($(sort <<< "${LIST[*]}"))
    for pkg in ${LIST[@]}; do
        echo "- $pkg" >> pkgs.md
    done
}

case "$1" in
"upinput")
    upinput
    ;;

"build")
    build
    ;;

"pushinput")
    echo -e '\033[1mPushing inputs to cachix...'
    nix flake archive --accept-flake-config --json \
        | jq -r '.path,(.inputs|to_entries[].value.path)' \
        | cachix push spitulax
    ;;

"pushpkgs")
    push
    ;;

"uplist")
    uplist
    ;;

"uppkgs")
    build && push && uplist
    ;;

"upall")
    upinput && build && push && uplist
    ;;
esac
